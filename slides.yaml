---
- !group
  - !slide
    content: |
      *RESTful API Design*

      Theory, Reality, and Songzality
  - !slide
    content: what to expect
    notes: not quite definitions; exploring common practices and ideas
- !group
  - !slide
    content: |
      *The Basics*
  - !slide
    content: API
    notes: how your software talks to each other
  - !slide
    content: |
      *songza.com/what-should-i-listen-to-while-working-out*

      ...
    notes: maybe you go to this URL and you get an answer
  - !slide
    content: |
      *songza.com/what-should-i-listen-to-while-working-out*

      _"listen to nothing but electro"_
    notes: talk about format
  - !slide
    content: |
      XML is like
      !some-xml.png!
  - !slide
    type: code:json
    content: |
      {
        "title": "Hello",
        "artist": {
          "image_url": "http://devp.songza.com/api/1/artist/511acc78e9e23d724dede548/image",
          "id": "511acc78e9e23d724dede548",
          "name": "Martin Solveig"
        },
        "album": "Hello",
        "cover_url": "http://images.musicnet.com/albums/049/144/337/a.jpeg",
        "genre": "Electronica/Dance",
        "id": 10634764,
      }
    notes: JSON = labels + info. Guess what this is?
  - !slide
    content: |
      how does songza use an API?

      *VERY*
  - !slide
    content: |
      Can I log in?
      What is the next song on this playlist?
      *What is the perfect playlist for what I'm doing right now?*
  - !slide
    content: |
      http://songza.com/api/1/situation/targeted?
      current_date=2013-10-02T16%3A38%3A24%2B04%3A00
      &day=3&period=2&device=web
      &site=songza&optimizer=user
      &max_situations=5&max_stations=3 
    notes: this URL makes us our money
  - !slide
    content: |
      !situation-targeted-much-json.png!
  - !slide
    content: |
      http://songza.com/listen/mariah-s-merry-christmas-MariahCarey/
      !http://songza.com/api/1/station/1750308/image?size=400!
    notes: this is an API too
  - !slide
    content: better APIs?
    notes: esp for bigger team and multi playform
- !group
  - !slide
      content: |
        !profound-design-patterns.jpg!
  - !slide
    content: |
      bad APIs?
  - !slide
    content: |
      http://songza.com/q?action=getSong
      &step=4&stationId=4321
      &previous_song_obj_id=f2fa3
  - !slide
    content: |
      http://songza.com/listenAction?
      do=skip&current=7878&station_url=/mariah/
    notes: inconsistency is bad
  - !slide
    content: |
      *RPC*

      remote procedure call
    notes: specific inputs and outputs
  - !slide
    content: |
      SOAP is like
      !some-xml.png!
  - !slide
    content: |
      *REST*

      representational stateful transfer?
    notes: most APIs are actually...
  - !slide
    content: |
      *RESTful*

      Ruthlessly Efficient Software Through
      Flawless Url Labels
  - !slide
    content: |
      whatever *nouns*

      session
      station
      song
  - !slide
    content: |
      consistent *URLs*

      /user
      /stations
      /song/12345
  - !slide
    content: |
      use standard *verbs*

      READ
      CREATE
      UPDATE
      DESTROY
  - !slide
    content: |
      *re-*use standard *HTTP* verbs

      GET
      POST
      PUT
      DELETE
  - !slide
    content: |
      re-use all kinds of HTTP stuff
      !profound-404.jpg!
  - !slide
    content: |
      GET /stations
  - !slide
    content: |
      POST /user
  - !slide
    content: |
      PUT /song/123
  - !slide
    content: |
      DELETE /station/471/song/123
  - !slide
    content: |
      !sz-doco-station-next.png!
  - !slide
    content: |
     RPC bad
     RESTful good...?
- !group
  - !group
    - !slide
      content: |
        *how REST are we?*
    - !slide
        content: |
          !matrix-rest.jpg!
    - !slide
        content: |
          "I am getting frustrated by the number of people calling any HTTP-based interface a REST API. That is RPC. It screams RPC. There is so much coupling on display that it should be given an X rating." - Roy T. Fielding
    - !slide
        content: |
          !sz-doco-station-next.png!
        notes: station-next. hardcoded inputs/outputs
    - !slide
      content: Richardson Maturity Model
      notes: model of RESTful maturity
  - !group
    - !slide
      content: |
        *Level 0: Swamp of POX*

        plain old XML + HTTP
    - !slide
      content: |
        *Level 0: Swamp of POJSON*

        still looks dangerous
    - !slide
      content: |
        *Level 1: Resources*

        broken into multiple resources
      notes: we are totally here
    - !slide
      content: |
        /session
        /station/123/stats
        /situation/id/45678/image
  - !group
    - !slide
      content: |
        *Level 2: HTTP Verbs*

        standard set of verbs
      notes: we use POST at least
  - !group
    - !slide
      content: |
        *Also: Nouns*
      notes: nouns related to sticking with liimited verbs
    - !slide
      content: |
        /get-user
        /new-user
        /situation/create
      notes: whats the verb?
    - !slide
      content: |
        /unfollow
        /suggest/artist
        /station/123/next
      notes: whats the noun?
    - !slide
      content: |
        /station/multi

        (but...)
      notes: no noun, but this is good
    - !slide
      content: |
        http://songza.com/api/1/situation/targeted?
        current_date=2013-10-02T16%3A38%3A24%2B04%3A00
        &day=3&period=2&device=web
        &site=songza&optimizer=user
        &max_situations=5&max_stations=3
    - !slide
      content: |
        â˜… Favorites
      notes: how do they work?
    - !slide
      content: |
        /collection/user/4321/create
        /collection/user/4321
        /collection/123
        /collection/123/add-station
      notes: how things work now
    - !slide
      content: |
        /user/favorites
      notes: better? semantics/representation
  - !group
    - !slide
      content: |
        *Level 3 - Hypermedia Controls*

        discoverability
    - !slide
      type: code:json
      content: |
        {
          "title": "Hello",
          "artist": {
            "image_url": "http://devp.songza.com/api/1/artist/511acc78e9e23d724dede548/image",
            "id": "511acc78e9e23d724dede548",
            "name": "Martin Solveig"
          },
          "album": "Hello",
          "cover_url": "http://images.musicnet.com/albums/049/144/337/a.jpeg",
          "genre": "Electronica/Dance",
          "id": 10634764,
        }
      notes: nested! artist/album
    - !slide
      type: code:json
      content: |
        {
          "title": "Hello",
          "links": {
            "artist": "http://devp.songza.com/api/1/artist/511acc78e9e23d724dede548",
            "album": "http://devp.songza.com/api/1/album/12345"
          }
          "cover_url": "http://images.musicnet.com/albums/049/144/337/a.jpeg",
          "genre": "Electronica/Dance",
          "id": 10634764,
        }
      notes: discover resources no doco
    - !slide
      content: |
        links -> resources
    - !slide
        content: |
          !ncsa-mosaic.png!
        notes: web does this with href, link, css
- !group
  - !slide
    content: |
      *compromises.*
  - !slide
    content: |
      nobody does all this
    notes: complicated verbs need doco
  - !slide
    content: |
      !situation-targeted-station-ids.png!
    notes: we have nested station ids
  - !slide
    content: |
      /station/123
      /station/456
      /station/789
      ...
      /station/multi
    notes: better to avoid calls. maybe nesting?
  - !slide
    content: |
      *ql.io*
      !ql-io-sample.png!
    notes: funky solution for aggregating calls
  - !slide
    content: |
      "Our REST API, while very capable of handling the requests from our devices in a generic way, is optimized for none of them. Our goal is to take advantage of the differences of these devices rather than treating them generically." Daniel Jacobson, Director of Engineering for the Netflix API
- !group
  - !slide
    content: |
      https://github.com/devp/sz-rest-talk-2013
      http://martinfowler.com/articles/richardsonMaturityModel.html
      http://en.wikipedia.org/wiki/Representational_state_transfer
      http://en.wikipedia.org/wiki/Remote_procedure_call#Web
      http://en.wikipedia.org/wiki/HATEOAS
      https://blog.apigee.com/detail/api_design_ruminating_over_rest#1-2-3
      http://timelessrepo.com/haters-gonna-hateoas
      http://blog.programmableweb.com/2012/05/15/why-rest-keeps-me-up-at-night/
      http://theprofoundprogrammer.com/
